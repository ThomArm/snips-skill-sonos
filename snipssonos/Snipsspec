package_name: snipssonos
class_name: SnipsSonos
description: Sonos skill for Snips
parameters: ["spotify_refresh_token", "default_speaker", "sonos_ip", "jishi_server", "music_server"]
notifications:
  - name: start_listening
    action: set_to_low_volume
  - name: done_listening
    action: set_to_previous_volume
intents:
  - intent: radioOn
    action: |
      {%
      snips.dialogue.end_session(None)
      if len(snips.intent.radio_name):
        radio_name = snips.intent.radio_name[0]
        snips.skill.turn_on_radio(radio_name)
      %}
  - intent: volumeUp
    action: |
      {%
      snips.dialogue.end_session(None)
      volume_higher = None
      snips.skill.set_to_previous_volume()
      if snips.intent.volume_higher:
        volume_higher = snips.intent.volume_higher[0]
      snips.skill.volume_up(volume_higher)
      snips.skill.previous_volume = snips.skill.device.volume
      %}
  - intent: volumeDown
    action: |
      {%
      snips.dialogue.end_session(None)
      volume_lower = None
      snips.skill.set_to_previous_volume()
      if len(snips.intent.volume_lower):
        volume_lower = snips.intent.volume_lower[0]
      snips.skill.volume_down(volume_lower)
      snips.skill.previous_volume = snips.skill.device.volume
      %}
  - intent: playPlaylist
    action: |
      {%
      snips.dialogue.end_session(None)
      if len(snips.intent.playlist_name):
        playlist_name = snips.intent.playlist_name[0]
        snips.skill.play_playlist(playlist_name, _shuffle=(len(snips.intent.playlist_lecture_mode) and snips.intent.playlist_lecture_mode[0] == "shuffle"))
      %}
  - intent: playArtist
    action: |
      {%
      snips.dialogue.end_session(None)
      if len(snips.intent.artist_name):
        artist_name = snips.intent.artist_name[0]
        snips.skill.play_artist(artist_name)
      %}
  - intent: playSong
    action: |
      {%
      snips.dialogue.end_session(None)
      if len(snips.intent.song_name):
        snips.skill.play_song(snips.intent.song_name)
      %}
  - intent: playAlbum
    action: |
      {%
      snips.dialogue.end_session(None)
      if len(snips.intent.album_name):
        album_name = snips.intent.album_name[0]
        snips.skill.play_album(album_name, _shuffle=(len(snips.intent.album_lecture_mode) and snips.intent.album_lecture_mode[0] == "shuffle"))
      %}
  - intent: getInfos
    action: |
      {%
      snips.dialogue.end_session(None)
      snips.skill.set_to_previous_volume();
      tts_service.speak("This is {} by {} on the album {}".format(*snips.skill.get_info()))
      %}
  - intent: speakerInterrupt
    action: |
      {%
      snips.dialogue.end_session(None)
      snips.skill.pause_sonos()
      %}
  - intent: resumeMusic
    action: |
      {% 
      snips.dialogue.end_session(None)
      snips.skill.play()
      %}
  - intent: nextSong
    action: |
      {%
      snips.dialogue.end_session(None)
      snips.skill.play_next_item_in_queue()
      %}
  - intent: previousSong
    action: |
      {%
      snips.dialogue.end_session(None)
      snips.skill.play_previous_item_in_queue()
      %}
  - intent: addSong
    action: |
      {%
      snips.dialogue.end_session(None);
      snips.skill.add_song()
      %}
